{"version":3,"sources":["styles.js","Stepper.js","App.js","serviceWorker.js","index.js"],"names":["theme","spacing","up","right","module","exports","useStyles","makeStyles","root","width","flexGrow","justifyContent","alignItems","Stepper","props","classes","MobileStepper","variant","steps","position","activeStep","step","className","padding","styles","height","textAlign","display","flexDirection","buttonContainer","margin","button","App","changeView","viewProps","text","value","length","showEnd","view","Typography","component","style","Button","color","onClick","currStep","state","setState","buy","saved","need","want","payment","large","thought","render","Paper","React","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6918523a.chunk.js","sourcesContent":["const theme = {\n  spacing: function(up, right=0) {\n    return `${10*up}px ${10*right}px`;\n  }\n}\n\nmodule.exports = {\n  theme\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    flexGrow: 0.5,\n    justifyContent: \"center\",\n    alignItems: 'flex-end',\n  },\n});\n\nexport default function Stepper(props) {\n  const classes = useStyles();\n\n  return (\n    <MobileStepper\n      variant=\"dots\"\n      steps={6}\n      position=\"static\"\n      activeStep={props.step}\n      className={classes.root}\n    />\n  );\n}","// Third-party\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Slide from '@material-ui/core/Slide';\n\n// Custom\nimport Stepper from './Stepper.js';\nimport styles from './styles.js';\n\nimport './App.css';\n\nconst classes = {\n  root: {\n    padding: styles.theme.spacing(3,2),\n    width: '80vw',\n    height: '40vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    margin: styles.theme.spacing(2, 2),\n  },\n  button: {\n    margin: styles.theme.spacing(0, 1),\n  }\n};\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: null,\n      step: 0,\n      saved: false,\n      need: false,\n      want: false,\n      payment: false,\n      large: false,\n      thought: false,\n    };\n  }\n\n  changeView = (step) => {\n\n    const viewProps = [\n      {\n        text: \"Have I saved for it?\",\n        value: \"saved\",\n      },\n      {\n        text: \"Do I need it?\",\n        value: \"need\",\n      },\n      {\n        text: \"Do I really want it?\",\n        value: \"want\",\n      },\n      {\n        text: \"Does it require monthly payments?\",\n        value: \"payment\",\n      },\n      {\n        text: \"Is this a large expense for me?\",\n        value: \"large\",\n      },\n      {\n        text: \"Have I thought about it over night?\",\n        value: \"thought\",\n      },\n    ];\n\n    if (step > viewProps.length - 1) {\n      this.showEnd();\n    } else {\n      const view = \n        <>\n          <Typography variant=\"h5\" component=\"h3\">\n            {viewProps[step].text}\n          </Typography>\n          <div style={classes.buttonContainer}>\n            <Button variant=\"contained\" color=\"primary\" style={classes.button} \n                    onClick={() =>  {\n                      let currStep = this.state.step;  \n                      this.setState({ \n                        step: currStep+1,\n                        [viewProps[step].value]: true,\n                      }, () => this.changeView(currStep+1));\n                    }}>\n              Yes\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" style={classes.button} \n                    onClick={() => {\n                      let currStep = this.state.step;  \n                      this.setState({ \n                        step: currStep+1,\n                        [viewProps[step].value]: false,\n                      }, () => this.changeView(currStep+1));\n                    }}>\n              No\n            </Button>\n          </div>\n        </>;\n      this.setState({ view: view });\n    }\n  }\n\n  showEnd = () => {\n    let buy = false; \n\n    if (\n        this.state.saved && \n        this.state.need && \n        this.state.want && \n        !this.state.payment && \n        ((this.state.large && this.state.thought) || (!this.state.large))\n      ) {\n        buy = true;\n      }\n    \n    let view = \n      <>\n        <Typography variant=\"h5\" component=\"h3\">\n          {buy ? \"Go ahead and buy it :)\" : \"No. Don't Buy.\"}\n        </Typography>\n        <div style={classes.buttonContainer}>\n          <Button variant=\"contained\" color=\"default\" style={classes.button} \n                  onClick={() =>  {\n                    this.setState({ step: 0 }, this.changeView(0));\n                  }}>\n            Start Over\n          </Button>\n        </div>\n      </>;\n    this.setState({ view: view });\n  }\n\n  render = () => {\n    return (\n      <div className=\"App\">\n        <Paper style={classes.root}>\n          {this.state.view === null ? this.changeView(0) : this.state.view}\n          <Stepper \n            step={this.state.step} \n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}